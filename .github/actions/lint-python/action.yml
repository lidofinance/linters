name: "Python linter"
description: "Lint python with pylint, black, isort and semgrep/bandit"
inputs:
  dirs:
    description: "Where is placed python code"
    required: false
    default: "./"
  pylint-args:
    description: "Additional args to pylint"
    required: false
    default: ""
  security-only:
    required: false
    default: "false"
    description: Run only security checks
runs:
  using: "composite"
  steps:
    - name: Check package manager
      id: package_manager
      shell: bash
      run: >
        test -f ./poetry.lock && 
        echo '::set-output name=value::poetry' || 
        echo '::set-output name=value::pip'

    - name: Install lint requirements
      if: ${{ steps.package_manager.outputs.value == 'pip' }}
      run: pip install pylint==2.13.4 black==22.3.0 isort==5.10.1 bandit==1.7.4
      shell: bash

    - name: Install lint requirements via poetry
      if: ${{ steps.package_manager.outputs.value == 'poetry' }}
      run: >
        poetry add -G dev pylint==2.13.4 black==22.3.0 isort==5.10.1 bandit==1.7.4;
      shell: bash

    - name: Run pylint checks
      run: >
        case ${{ steps.package_manager.outputs.value }} in
        pip) pylint ${{ inputs.pylint-args }} --recursive y ${{ inputs.dirs }};;
        poetry) poetry run pylint ${{ inputs.pylint-args }} --recursive y ${{ inputs.dirs }};;
        esac
      shell: bash
      if: ${{ always() && inputs.security-only == false }}

    - name: Run black checks
      run: >
        case ${{ steps.package_manager.outputs.value }} in
        pip) black --check ${{ inputs.dirs }};;
        poetry) poetry run black --check ${{ inputs.dirs }};;
        esac
      shell: bash
      if: ${{ always() && inputs.security-only == false }}

    - name: Run isort checks
      run: >
        case ${{ steps.package_manager.outputs.value }} in
        pip) isort --check ${{ inputs.dirs }};;
        poetry) poetry run isort --check ${{ inputs.dirs }};;
        esac
      shell: bash
      if: ${{ always() && inputs.security-only == false }}

    - name: Run security checks via bandit
      run: >
        case ${{ steps.package_manager.outputs.value }} in
        pip) bandit -r ${{ inputs.dirs }};;
        poetry) poetry run bandit -r ${{ inputs.dirs }};;
        esac
      shell: bash
      if: ${{ always() }}
